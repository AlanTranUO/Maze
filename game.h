// Class automatically generated by Dev-C++ New Class wizard

#ifndef GAME_H
#define GAME_H
#include "maze.h"
#include "hero.h"
#include "monster.h"
#include "stack.h"
#include "items.h"
#include "weapon.h"

// This class is the game class, this class runs the whole game. It contains all objects.

class Game
{   private:

	public:
		// class constructor
		Game();
		// class destructor
		~Game();
	//GLOBAL VARIABLES (Restricted in class)
	int gamelooper; //Used as a loop to loop manual move.
    int option; //What would user first like to do
    Stack stack1; //Stacks and direction used for auto solver
    Stack stack2;
    int direction;
	    //MAZE
        Maze game_maze; // Object of type Maze
	    //HERO
        Hero main_hero; // Object of type Hero
	    //MONSTERS //R = what row it is in mazeboard, C = what column it is in mazeboard
	    Monster *monster1; //R:1 C:4
        Monster *monster2; //R:4 C:4
        Monster *monster3; //R:3 C:10
        Monster *monster4; //R:7 C:9
        Monster *monster5; //R:8 C:10
        Monster *monster6; //R:9 C:4
        Monster *boss; //R:10 C:6
        ///Items
        Items healthpot1;
        Items healthpot2;
        Items healthpot3;
        
        Weapon sword1;
        Weapon sword2;
    
    
    //FUNCTION PROTOTYPES
	
	void intro(); //Shows title, asks if user would like to play, read instructions or exit.
	void instructions();
	void choosing_which_game(); //If user would like to play, which setting? 1 User 2 Autosolve
	void playing_loop(); //Plays manual game till user wins or dies.
    void display_stats(); //Displays game stats
    void display_monster_hero_stats(Monster*); //In display_stats(), displays hero & all monster stats.
     
    //PROTOYPES FOR AUTO SOLVER
	void auto_solve(); //Solves maze
	void first_load_stack(); //First time loading stack for conistency.
	void automove(); //Moves hero along maze
	void reload_stack(); //Reloads stack depending on movement.
	void reset_stacks(); //Emptys stack
	void reset_breadcrumbs(); //Make all breadcrumbs false.

};

#endif // GAME_H
